{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\n\n// Configurações do EmailJS - Substitua com suas credenciais\nconst SERVICE_ID = 'service_ncvxgoc';\nconst TEMPLATE_ID = 'template_stgdqou';\nconst PUBLIC_KEY = '4nZlFpVUqWScIMHyI';\n\n// Carrega o script do EmailJS\nconst loadEmailJSScript = () => {\n  const script = document.createElement('script');\n  script.src = 'https://cdn.jsdelivr.net/npm/@emailjs/browser@3/dist/email.min.js';\n  script.async = true;\n  document.body.appendChild(script);\n  return new Promise(resolve => {\n    script.onload = () => {\n      window.emailjs.init(PUBLIC_KEY);\n      resolve();\n    };\n  });\n};\nexport const useContactForm = () => {\n  _s();\n  useEffect(() => {\n    loadEmailJSScript();\n  }, []);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState(null);\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Validação do nome\n    if (!formData.name.trim()) {\n      newErrors.name = 'Nome é obrigatório';\n    }\n\n    // Validação do email\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email é obrigatório';\n    } else if (!emailRegex.test(formData.email)) {\n      newErrors.email = 'Email inválido';\n    }\n\n    // Validação do assunto\n    if (!formData.subject.trim()) {\n      newErrors.subject = 'Assunto é obrigatório';\n    }\n\n    // Validação da mensagem\n    if (!formData.message.trim()) {\n      newErrors.message = 'Mensagem é obrigatória';\n    } else if (formData.message.length < 10) {\n      newErrors.message = 'Mensagem deve ter pelo menos 10 caracteres';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // Limpa o erro do campo quando o usuário começa a digitar\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    setIsSubmitting(true);\n    setSubmitStatus(null);\n    try {\n      const templateParams = {\n        from_name: formData.name,\n        from_email: formData.email,\n        subject: formData.subject,\n        message: formData.message\n      };\n      const response = await window.emailjs.send(SERVICE_ID, TEMPLATE_ID, templateParams);\n      if (response.status === 200) {\n        setSubmitStatus({\n          type: 'success',\n          message: 'Mensagem enviada com sucesso! Entrarei em contato em breve.'\n        });\n        setFormData({\n          name: '',\n          email: '',\n          subject: '',\n          message: ''\n        });\n      }\n    } catch (error) {\n      setSubmitStatus({\n        type: 'error',\n        message: 'Erro ao enviar mensagem. Por favor, tente novamente.'\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return {\n    formData,\n    errors,\n    isSubmitting,\n    submitStatus,\n    handleChange,\n    handleSubmit\n  };\n};\n_s(useContactForm, \"2pspP2qwsI31v6wFEnlaeaZKpFI=\");","map":{"version":3,"names":["useState","useEffect","SERVICE_ID","TEMPLATE_ID","PUBLIC_KEY","loadEmailJSScript","script","document","createElement","src","async","body","appendChild","Promise","resolve","onload","window","emailjs","init","useContactForm","_s","formData","setFormData","name","email","subject","message","errors","setErrors","isSubmitting","setIsSubmitting","submitStatus","setSubmitStatus","validateForm","newErrors","trim","emailRegex","test","length","Object","keys","handleChange","e","value","target","prev","handleSubmit","preventDefault","templateParams","from_name","from_email","response","send","status","type","error"],"sources":["C:/Users/rochi/OneDrive/Área de Trabalho/PortifólioWeb/src/hooks/useContactForm.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n// Configurações do EmailJS - Substitua com suas credenciais\r\nconst SERVICE_ID = 'service_ncvxgoc';\r\nconst TEMPLATE_ID = 'template_stgdqou';\r\nconst PUBLIC_KEY = '4nZlFpVUqWScIMHyI';\r\n\r\n// Carrega o script do EmailJS\r\nconst loadEmailJSScript = () => {\r\n  const script = document.createElement('script');\r\n  script.src = 'https://cdn.jsdelivr.net/npm/@emailjs/browser@3/dist/email.min.js';\r\n  script.async = true;\r\n  document.body.appendChild(script);\r\n\r\n  return new Promise((resolve) => {\r\n    script.onload = () => {\r\n      window.emailjs.init(PUBLIC_KEY);\r\n      resolve();\r\n    };\r\n  });\r\n};\r\n\r\nexport const useContactForm = () => {\r\n  useEffect(() => {\r\n    loadEmailJSScript();\r\n  }, []);\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    subject: '',\r\n    message: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitStatus, setSubmitStatus] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    // Validação do nome\r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'Nome é obrigatório';\r\n    }\r\n\r\n    // Validação do email\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!formData.email.trim()) {\r\n      newErrors.email = 'Email é obrigatório';\r\n    } else if (!emailRegex.test(formData.email)) {\r\n      newErrors.email = 'Email inválido';\r\n    }\r\n\r\n    // Validação do assunto\r\n    if (!formData.subject.trim()) {\r\n      newErrors.subject = 'Assunto é obrigatório';\r\n    }\r\n\r\n    // Validação da mensagem\r\n    if (!formData.message.trim()) {\r\n      newErrors.message = 'Mensagem é obrigatória';\r\n    } else if (formData.message.length < 10) {\r\n      newErrors.message = 'Mensagem deve ter pelo menos 10 caracteres';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    // Limpa o erro do campo quando o usuário começa a digitar\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    setSubmitStatus(null);\r\n\r\n    try {\r\n      const templateParams = {\r\n        from_name: formData.name,\r\n        from_email: formData.email,\r\n        subject: formData.subject,\r\n        message: formData.message\r\n      };\r\n\r\n      const response = await window.emailjs.send(\r\n        SERVICE_ID,\r\n        TEMPLATE_ID,\r\n        templateParams\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setSubmitStatus({\r\n          type: 'success',\r\n          message: 'Mensagem enviada com sucesso! Entrarei em contato em breve.'\r\n        });\r\n        \r\n        setFormData({\r\n          name: '',\r\n          email: '',\r\n          subject: '',\r\n          message: ''\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setSubmitStatus({\r\n        type: 'error',\r\n        message: 'Erro ao enviar mensagem. Por favor, tente novamente.'\r\n      });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    formData,\r\n    errors,\r\n    isSubmitting,\r\n    submitStatus,\r\n    handleChange,\r\n    handleSubmit\r\n  };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}